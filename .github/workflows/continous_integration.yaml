name: Continous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/**"
      - "emush_llm/**"
      - "tests/**"
      - "pyproject.toml"
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        name: Checkout
      - name: Set up Python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
          version: "1.8.3"
      - name: Load cached virtual environement
        id: cached-poetry-dependencies
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev
      - name: Check code format with Ruff
        run: poetry run ruff format . --diff
      - name: Lint code with Ruff
        run: poetry run ruff check .
      - name: Check types with Mypy
        run: poetry run mypy .
  
  test:
    name: Tests
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
        name: Checkout
      - name: Set up Python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true
          version: "1.8.3"
      - name: Load cached virtual environement
        id: cached-poetry-dependencies
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --with dev
      - name: Run tests with pytest
        run: poetry run pytest -v --cov=emush_llm
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
